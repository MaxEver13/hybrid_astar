# Parameters for smac planner
tolerance: 0.5                   # tolerance for planning if unable to reach exact pose, in meters, for 2D node
downsample_costmap: false         # whether or not to downsample the map
downsampling_factor: 4            # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
allow_unknown: false              # allow traveling in unknown space
max_iterations: 100000                # maximum total iterations to search for before failing
max_on_approach_iterations: 1000  # maximum number of iterations to attempt to reach goal once in tolerance, 2D only
max_planning_time: 2.0            # max time in s for planner to plan, smooth, and upsample. Will scale maximum smoothing and upsampling times based on remaining time after planning.
smooth_path: false                # Whether to smooth searched path
motion_model_for_search: "DUBIN"  # 2D Moore, Von Neumann; SE2 Dubin, Redds-Shepp
angle_quantization_bins: 72       # For SE2 node: Number of angle bins for search, must be 1 for 2D node (no angle search)
minimum_turning_radius: 0.2      # For SE2 node & smoother: minimum turning radius in m of path / vehicle
reverse_penalty: 2.1              # For Reeds-Shepp model: penalty to apply if motion is reversing, must be => 1
change_penalty: 1.2              # For SE2 node: penalty to apply if motion is changing directions, must be >= 0
non_straight_penalty: 0        # For SE2 node: penalty to apply if motion is non-straight, must be => 1
cost_penalty: 0                 # For SE2 node: penalty to apply to higher cost zones
analytic_expansion_ratio: 2.0     # For SE2 node: penalty to apply to higher cost zones
# Smoother
w_curve: 30.0                 # weight to minimize curvature of path
w_dist: 0.0                   # weight to bind path to original as optional replacement for cost weight
w_smooth: 30000.0             # weight to maximize smoothness of path
w_cost: 0.025                 # weight to steer robot away from collision and cost
cost_scaling_factor: 10.0     # this should match the inflation layer's parameter
# Optimizer
max_time: 0.10                # maximum compute time for smoother
opt_max_iterations: 500           # max iterations of smoother
debug_optimizer: false        # print debug info
gradient_tol: 1.0e-10
fn_tol: 1.0e-20
param_tol: 1.0e-15
min_line_search_step_size: 1.0e-20
max_num_line_search_step_size_iterations: 50
line_search_sufficient_function_decrease: 1.0e-20
max_num_line_search_direction_restarts: 10
max_line_search_step_expansion: 50

